{"version":3,"file":"static/js/160.efbfc763.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormGroup.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;"],"names":["propTypes","type","PropTypes","tooltip","as","Feedback","React","_ref","ref","_ref$as","Component","className","_ref$type","_ref$tooltip","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","classNames","concat","displayName","FormCheckInput","id","bsPrefix","_ref$isValid","isValid","_ref$isInvalid","isInvalid","controlId","useContext","FormContext","useBootstrapPrefix","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","_ref$inline","inline","_ref$reverse","reverse","_ref$disabled","disabled","_ref$feedbackTooltip","feedbackTooltip","feedback","feedbackType","style","_ref$title","title","label","children","innerFormContext","useMemo","hasLabel","hasChildOfType","input","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","classes","_classes2","size","htmlSize","plaintext","readOnly","_defineProperty","createWithBsPrefix","FormLabel","_ref$column","column","_ref$visuallyHidden","visuallyHidden","columnClass","Col","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","FormGroup","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select","context"],"sourceRoot":""}