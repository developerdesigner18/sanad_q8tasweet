{"version":3,"file":"static/js/315.f925689e.chunk.js","mappings":"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","sources":["components/Constant/Config.js","redux/actions/userDetailAction.js","components/Pages/User/Detail/CandidateDetail.js","components/Pages/User/Detail/SupervisorDetail.js","components/Pages/User/Detail/GuanatorDetail.js","components/Cards/CandidateDetailTCard.js","components/Cards/SupervisorDetailTCard.js","components/Cards/GuanatorDetailTCard.js","components/Pages/User/Detail/index.js"],"sourcesContent":["export const backend_url = process.env.REACT_APP_BACKEND_URL;\r\nexport const image_url = `${process.env.REACT_APP_BACKEND_URL}Backend/images/`;\r\n\r\nexport const election_status = [\r\n  { key: 0, value: \"created\", color: \"cyan\" },\r\n  { key: 1, value: \"broken\", color: \"red\" },\r\n  { key: 2, value: \"approved\", color: \"orange\" },\r\n  { key: 3, value: \"waiting...\", color: \"purple\" },\r\n  { key: 4, value: \"processing...\", color: \"blue\" },\r\n  { key: 5, value: \"done\", color: \"green\" },\r\n];\r\n","import { backend_url } from \"../../components/Constant/Config\"\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const getCandidateDetail = ({ data, userid }, dispatch) => {\r\n    fetch(backend_url + 'getUserTeamCount/?id=' + userid, { method: 'GET' })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch({ type: \"GET_SUCCESS_COUNT\", payload: data.data })\r\n        });\r\n    fetch(backend_url + 'getMyTeamId/?limit=' + data.limit + '&keyword=' + data.keyword + '&filter=' + data.filter + '&sorter=' + data.sorter + '&pagenum=' + data.pagenum + '&userid=' + userid, { method: 'GET' })\r\n        .then(response => response.json())\r\n        .then(async data => {\r\n            dispatch({ type: \"GET_SUCCESS_USERETAIL\", payload: data })\r\n        });\r\n}\r\n\r\nexport const getSupervisorDetail = ({ data, userid }, dispatch) => {\r\n    fetch(backend_url + 'getSupervisorTeamCount/?id=' + userid, { method: 'GET' })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch({ type: \"GET_SUCCESS_COUNT\", payload: data.data })\r\n        });\r\n    fetch(backend_url + 'getMyCandidateId/?limit=' + data.limit + '&keyword=' + data.keyword + '&filter=' + data.filter + '&sorter=' + data.sorter + '&pagenum=' + data.pagenum + '&userid=' + userid, { method: 'GET' })\r\n        .then(response => response.json())\r\n        .then(async data => {\r\n            dispatch({ type: \"GET_SUCCESS_USERETAIL\", payload: data })\r\n        });\r\n}\r\n\r\nexport const getGuanatorDetail = ({ data, userid, id }, dispatch) => {\r\n    // fetch(backend_url + 'getGuanatorTeamCount/?id=' + userid, { method: 'GET' })\r\n    //     .then(response => response.json())\r\n    //     .then(data => {\r\n    //         dispatch({ type: \"GET_SUCCESS_COUNT\", payload: data.data })\r\n    //     });\r\n    fetch(backend_url + 'getMyGuanatorId/?id=' + id + '&limit=' + data.limit + '&keyword=' + data.keyword + '&filter=' + data.filter + '&sorter=' + data.sorter + '&pagenum=' + data.pagenum + '&userid=' + userid, { method: 'GET' })\r\n        .then(response => response.json())\r\n        .then(async data => {\r\n            dispatch({ type: \"GET_SUCCESS_USERETAIL\", payload: data })\r\n        });\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { Card, Button, Modal } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { backend_url } from \"../../../Constant/Config\"\r\nimport DataTable from \"react-data-table-component\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Select from \"react-select\";\r\nimport { getCandidateDetail } from \"../../../../redux/actions/userDetailAction\";\r\nconst CandidateDetail = () => {\r\n    let { id } = useParams();\r\n    let { userid } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [show, setShow] = React.useState({ flag: false });\r\n    const handleClose = () => setShow({ flag: false });\r\n    const handleShow = () => setShow({ flag: true });\r\n    const rankList = useSelector(state => state.rank);\r\n    const roleList = useSelector(state => state.role);\r\n    const userDetail = useSelector(state => state.userDetail);\r\n    const [postData, setPostData] = React.useState({ limit: 5, keyword: \"\", filter: \"id\", sorter: \"desc\", pagenum: 1 });\r\n    const [allUser, setAllUser] = React.useState(null);\r\n    const [selectedUser, setSelectedUser] = React.useState();\r\n    const candidateColums = [\r\n        {\r\n            name: \"Name\",\r\n            cell: (row) => (\r\n                <span>\r\n                    <p className=\"tx-14 font-weight-semibold text-dark mb-1\"><a href=\"#\" onClick={() => goToUser(row)} className=\"pointer_action_button\">{row.fname + \" \" + row.lname}</a></p>\r\n                    <p className=\"tx-12 text-muted mb-0\">{row.email}</p>\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            name: \"Rank\",\r\n            title: \"rank\",\r\n            selector: (row) => [row.rank],\r\n            cell: (row) => {\r\n                return rankList.data.map(ele => {\r\n                    if (ele.id - row.rank === 0)\r\n                        return ele.name;\r\n                })\r\n            },\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Role\",\r\n            title: \"role\",\r\n            cell: (row) => {\r\n                return roleList.data.map(ele => {\r\n                    if (ele.id - row.role === 0)\r\n                        return ele.name;\r\n                })\r\n            },\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Mobile Number\",\r\n            title: \"mobile\",\r\n            sortable: true,\r\n            selector: (row) => [row.mobile]\r\n        },\r\n        {\r\n            name: \"Civil Id Number\",\r\n            title: \"cid\",\r\n            sortable: true,\r\n            selector: (row) => [row.cid]\r\n        },\r\n        {\r\n            name: \"Username\",\r\n            title: \"username\",\r\n            sortable: true,\r\n            selector: (row) => [row.username]\r\n        },\r\n        {\r\n            name: \"\",\r\n            width: \"50px\",\r\n            cell: (row) => (\r\n                <span className=\"\" style={{ width: \"100%\", textAlign: \"end\" }}>\r\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Delete</Tooltip>} >\r\n                        <Link to=\"#\" className=\"btn btn-danger btn-sm rounded-11\" onClick={() => deleteRow(row.id)}>\r\n                            <i>\r\n                                <svg\r\n                                    className=\"table-delete\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    height=\"20\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    width=\"16\"\r\n                                >\r\n                                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n                                    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z\" />\r\n                                </svg>\r\n                            </i>\r\n                        </Link>\r\n                    </OverlayTrigger>\r\n                </span >\r\n            ),\r\n        },\r\n    ]\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(backend_url + 'getUserElection/?id=' + id, { method: 'GET' })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setAllUser(data.data);\r\n                });\r\n            getData(postData);\r\n        };\r\n        fetchData().catch(err => console.log(err));\r\n    }, [])\r\n    const getData = (data) => {\r\n        getCandidateDetail({ data: postData, userid: userid }, dispatch);\r\n    }\r\n    const changeData = (data) => {\r\n        let resultData = [];\r\n        if (data)\r\n            data.map((e, index) => {\r\n                let e_data = e;\r\n                e_data.no = index + postData.limit * (postData.pagenum - 1) + 1;\r\n                resultData.push(e_data);\r\n            })\r\n        return resultData;\r\n    }\r\n    const changeLimit = (event) => {\r\n        setPostData({ ...postData, limit: event.target.value, pagenum: 1 });\r\n        let data = postData;\r\n        data.limit = event.target.value;\r\n        data.pagenum = 1;\r\n        getData(data);\r\n    }\r\n    const changePagenum = (event, value) => {\r\n        setPostData({ ...postData, pagenum: value });\r\n        let data = postData;\r\n        data.pagenum = value;\r\n        getData(data);\r\n    }\r\n    const changeKeyword = (event) => {\r\n        setPostData({ ...postData, keyeword: event.target.value, pagenum: 1 });\r\n        let data = postData;\r\n        data.keyword = event.target.value;\r\n        data.pagenum = 1;\r\n        getData(data);\r\n    }\r\n    const deleteRow = (id) => {\r\n        Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"You delete this!\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, delete it!\",\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                fetch(backend_url + 'delMyTeamId/?id=' + id, { method: 'GET' })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\r\n                        getCandidateDetail({ data: postData, userid: userid }, dispatch);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n    const tableAction = (sortBy, sortDirection) => {\r\n        setPostData({ ...postData, filter: candidateColums[sortBy.id - 1].title, sorter: sortDirection, pagenum: 1 });\r\n        let data = postData;\r\n        data.filter = candidateColums[sortBy.id - 1].title;\r\n        data.sorter = sortDirection;\r\n        data.pagenum = 1;\r\n        getData(data);\r\n    };\r\n    const changeOption = (data) => {\r\n        const options = []\r\n        if (data !== null)\r\n            data.map(ele => {\r\n                let option = ele;\r\n                ele.value = ele.fname + \" \" + ele.lname;\r\n                ele.label = ele.fname + \" \" + ele.lname;\r\n                options.push(option);\r\n            })\r\n        return options;\r\n    };\r\n    const changeNameAdd = (value) => {\r\n        setSelectedUser(value);\r\n    };\r\n    const checkableAdd = () => {\r\n        let a = 0;\r\n        userDetail.userData && userDetail.userData.map(ele => {\r\n            if (ele.fname === selectedUser.fname && ele.lname === selectedUser.lname && ele.email === selectedUser.email && ele.cid - selectedUser.cid === 0) {\r\n                a = 1;\r\n            }\r\n        })\r\n        console.log(a)\r\n        return a === 1 ? true : false\r\n    };\r\n    const goToUser = (row) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(row)\r\n        };\r\n        fetch(backend_url + 'getIdUser', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data.data);\r\n                window.location.href = `${process.env.PUBLIC_URL}/elections/` + id + `/` + data.data;\r\n            }); \r\n    }\r\n    const downloadFile = ({ data, fileName, fileType }) => {\r\n        const blob = new Blob([data], { type: fileType })\r\n\r\n        const a = document.createElement('a')\r\n        a.download = fileName\r\n        a.href = window.URL.createObjectURL(blob)\r\n        const clickEvt = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n        })\r\n        a.dispatchEvent(clickEvt)\r\n        a.remove()\r\n    }\r\n    const exportToCsv = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Headers for each column\r\n        let headers = ['No,First Name,Last Name,Rank,Role,Mobile, Civil Id, Username']\r\n\r\n        // Convert users data to a csv userDetail.userData\r\n        let csvData = changeData(userDetail.userData).reduce((acc, user) => {\r\n            const { no, fname, lname, rank, role, mobile, cid, username } = user;\r\n            let rankStr = \"\";\r\n            let roleStr = \"\";\r\n            rankList.data.map(ele => {\r\n                if (ele.id - rank === 0)\r\n                    rankStr = ele.name;\r\n            }, []);\r\n            roleList.data.map(ele => {\r\n                if (ele.id - role === 0)\r\n                    roleStr = ele.name;\r\n            }, []);\r\n            acc.push([no, fname, lname, rankStr, roleStr, mobile, cid, username].join(','))\r\n            return acc\r\n        }, [])\r\n\r\n        downloadFile({\r\n            data: [...headers, ...csvData].join('\\n'),\r\n            fileName: 'candidate.csv',\r\n            fileType: 'text/csv',\r\n        })\r\n    }\r\n    return (\r\n        <Card className=\"card-primary customs-cards\">\r\n            <Card.Header className=\" pb-3\">\r\n                <div className=\"card-title pb-0  mb-2\">\r\n                    MY TEAM\r\n                    <div className=\"float-end\">\r\n                        <Button variant='' className=\"btn-sm btn-primary btn-rounded\" onClick={handleShow}>\r\n                            <i className=\"fe fe-user-plus me-1\"></i> Add New Team Member\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button variant='' className=\"btn-sm btn-primary btn-rounded\" onClick={exportToCsv}>\r\n                            <i className=\"fe fe-download me-1\"></i> Download\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Modal show={show.flag} onHide={handleClose} >\r\n                    <Modal.Header className=\"modal-header\">\r\n                        <Modal.Title>Add New Team Member</Modal.Title>\r\n                        <Button variant=\"\" className=\"btn btn-close\" onClick={handleClose}>\r\n                            x\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"modal-body\">\r\n                        <div className=\" SlectBox\">\r\n                            <Select\r\n                                value={selectedUser}\r\n                                onChange={changeNameAdd}\r\n                                options={changeOption(allUser)}\r\n                                placeholder=\"Select Name\"\r\n                                classNamePrefix=\"selectform\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            {selectedUser ?\r\n                                <>\r\n                                    <div>email   :{selectedUser.email}</div>\r\n                                    <div>mobile  :{selectedUser.mobile}</div>\r\n                                    <div>civid id:{selectedUser.cid}</div>\r\n                                </> : <></>\r\n                            }\r\n\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            variant=\"\"\r\n                            className=\"btn ripple btn-primary\"\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                if (checkableAdd() === true || selectedUser.id - userid === 0) {\r\n                                    handleClose();\r\n                                    Swal.fire({\r\n                                        title: \"Add Warning\",\r\n                                        allowOutsideClick: false,\r\n                                        icon: \"warning\",\r\n                                        confirmButtonText: \"ok\",\r\n                                        cancelButtonColor: \"#38cab3\",\r\n                                        text: \"He (She) is already in your team\",\r\n                                    });\r\n                                } else {\r\n                                    const requestOptions = {\r\n                                        method: 'POST',\r\n                                        headers: { 'Content-Type': 'application/json' },\r\n                                        body: JSON.stringify({ canid: userid, teamid: selectedUser.id })\r\n                                    };\r\n                                    fetch(backend_url + 'addMyTeamId', requestOptions)\r\n                                        .then(response => response.json())\r\n                                        .then(data => {\r\n                                            if (data.code - 200 === 0) {\r\n                                                getData(postData);\r\n                                                handleClose();\r\n                                                Swal.fire(\"Add!\", \"Add new member successfully\", \"success\");\r\n                                            }\r\n                                        });\r\n                                }\r\n                            }}\r\n                        >\r\n                            Add Member\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Card.Header>\r\n            <Card.Body className=\" d-md-flex bg-white\">\r\n                <div className=\"table-responsive \">\r\n                    <span className=\"datatable\">\r\n                        <span className=\"uselistdata\">\r\n                            <label className=\"float-first\">\r\n                                <select className=\"form-control select form-select\" defaultValue={\"5\"} onChange={changeLimit}>\r\n                                    <option value=\"5\" >5&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                    <option value=\"10\">10&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                    <option value=\"20\">20&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                    <option value=\"50\">50&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                </select>\r\n                            </label>\r\n                            <label className=\"float-end\">\r\n                                <input type=\"text\" placeholder=\"Name, Mobile, Civil id number Search...\" className=\"mb-4 form-control-sm form-control\" onChange={changeKeyword} style={{ width: \"400px\" }} />\r\n                            </label>\r\n                            <DataTable\r\n                                columns={candidateColums}\r\n                                data={changeData(userDetail.userData)}\r\n                                defaultSortField=\"id\"\r\n                                defaultSortAsc={false}\r\n                                pagination={false}\r\n                                striped\r\n                                onSort={tableAction}\r\n                            />\r\n                            <label className=\"float-end\" style={{ marginTop: \"5px\" }}>\r\n                                <Pagination page={postData.pagenum} count={Math.ceil(userDetail.userDataCount / postData.limit)} showFirstButton showLastButton onChange={changePagenum} />\r\n                            </label>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nCandidateDetail.propTypes = {};\r\n\r\nCandidateDetail.defaultProps = {};\r\n\r\nexport default CandidateDetail;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { Card, Button, Modal } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { backend_url } from \"../../../Constant/Config\"\r\nimport DataTable from \"react-data-table-component\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Select from \"react-select\";\r\nimport { getSupervisorDetail } from \"../../../../redux/actions/userDetailAction\";\r\nconst SupervisorDetail = () => {\r\n    let { id } = useParams();\r\n    let { userid } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [show, setShow] = React.useState({ flag: false });\r\n    const handleClose = () => setShow({ flag: false });\r\n    const handleShow = () => setShow({ flag: true });\r\n    const rankList = useSelector(state => state.rank);\r\n    const roleList = useSelector(state => state.role);\r\n    const userDetail = useSelector(state => state.userDetail);\r\n    const [electionData, setElectionData] = React.useState({ id: id, title: \"\", description: \"\", location: \"\", date: \"\", type: \"\", image: \"\" });\r\n    const [userData, setUserData] = React.useState({ id: userid });\r\n    const [teamcount, setTeamCount] = React.useState();\r\n    const [guaranteesCount, setGuaranteesCount] = React.useState({ my: 0, all: 0 });\r\n    const [postData, setPostData] = React.useState({ limit: 5, keyword: \"\", filter: \"id\", sorter: \"desc\", pagenum: 1 });\r\n    const [allData, setAllData] = React.useState({ data: [], count: 0 });\r\n    const [allUser, setAllUser] = React.useState(null);\r\n    const [selectedUser, setSelectedUser] = React.useState();\r\n    const candidateColums = [\r\n        {\r\n            name: \"Name\",\r\n            cell: (row) => (\r\n                <span>\r\n                    <p className=\"tx-14 font-weight-semibold text-dark mb-1\"><a href=\"#\" onClick={() => goToUser(row)} className=\"pointer_action_button\">{row.fname + \" \" + row.lname}</a></p>\r\n                    <p className=\"tx-12 text-muted mb-0\">{row.email}</p>\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            name: \"Rank\",\r\n            title: \"rank\",\r\n            selector: (row) => [row.rank],\r\n            cell: (row) => {\r\n                return rankList.data.map(ele => {\r\n                    if (ele.id - row.rank === 0)\r\n                        return ele.name;\r\n                })\r\n            },\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Role\",\r\n            title: \"role\",\r\n            cell: (row) => {\r\n                return roleList.data.map(ele => {\r\n                    if (ele.id - row.role === 0)\r\n                        return ele.name;\r\n                })\r\n            },\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Mobile Number\",\r\n            title: \"mobile\",\r\n            sortable: true,\r\n            selector: (row) => [row.mobile]\r\n        },\r\n        {\r\n            name: \"Civil Id Number\",\r\n            title: \"cid\",\r\n            sortable: true,\r\n            selector: (row) => [row.cid]\r\n        },\r\n        {\r\n            name: \"Username\",\r\n            title: \"username\",\r\n            sortable: true,\r\n            selector: (row) => [row.username]\r\n        },\r\n        {\r\n            name: \"\",\r\n            width: \"50px\",\r\n            cell: (row) => (\r\n                <span className=\"\" style={{ width: \"100%\", textAlign: \"end\" }}>\r\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Delete</Tooltip>} >\r\n                        <Link to=\"#\" className=\"btn btn-danger btn-sm rounded-11\" onClick={() => deleteRow(row.id)}>\r\n                            <i>\r\n                                <svg\r\n                                    className=\"table-delete\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    height=\"20\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    width=\"16\"\r\n                                >\r\n                                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n                                    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z\" />\r\n                                </svg>\r\n                            </i>\r\n                        </Link>\r\n                    </OverlayTrigger>\r\n                </span >\r\n            ),\r\n        },\r\n    ]\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(backend_url + 'getElectionId/?id=' + id, { method: 'GET' })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setElectionData(data.data);\r\n                });\r\n            await fetch(backend_url + 'getUserElection/?id=' + id, { method: 'GET' })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setAllUser(data.data);\r\n                });\r\n            await fetch(backend_url + 'getGuaranteesCount/?id=' + userid + '&eid=' + id, { method: 'GET' })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setGuaranteesCount(data.data);\r\n                });\r\n            await fetch(backend_url + 'getUserId/?id=' + userid, { method: 'GET' })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setUserData(data.data)\r\n                });\r\n            await fetch(backend_url + 'getUserTeamCount/?id=' + userid, { method: 'GET' })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setTeamCount(data.data);\r\n                });\r\n            getData(postData);\r\n        };\r\n        fetchData().catch(err => console.log(err));\r\n    }, [])\r\n    const getData = (data) => {\r\n        getSupervisorDetail({ data: postData, userid: userid }, dispatch);\r\n    }\r\n    const showCount = (type) => {\r\n        let total = 0;\r\n        switch (type) {\r\n            case \"total\":\r\n                teamcount && teamcount.map(ele => {\r\n                    total += ele.count;\r\n                })\r\n                break;\r\n            case \"supervisor\":\r\n                teamcount && teamcount.map(ele => {\r\n                    if (ele.name === \"supervisor\") total = ele.count\r\n                })\r\n                break;\r\n            case \"guarantor\":\r\n                teamcount && teamcount.map(ele => {\r\n                    if (ele.name === \"guarantor\") total = ele.count\r\n                })\r\n                break;\r\n            case \"checker\":\r\n                teamcount && teamcount.map(ele => {\r\n                    if (ele.name === \"checker\") total = ele.count\r\n                })\r\n                break;\r\n            case \"sorter\":\r\n                teamcount && teamcount.map(ele => {\r\n                    if (ele.name === \"sorter\") total = ele.count\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return total;\r\n    }\r\n    const changeData = (data) => {\r\n        let resultData = [];\r\n        if (data)\r\n            data.map((e, index) => {\r\n                let e_data = e;\r\n                e_data.no = index + postData.limit * (postData.pagenum - 1) + 1;\r\n                resultData.push(e_data);\r\n            })\r\n        return resultData;\r\n    }\r\n    const changeLimit = (event) => {\r\n        setPostData({ ...postData, limit: event.target.value, pagenum: 1 });\r\n        let data = postData;\r\n        data.limit = event.target.value;\r\n        data.pagenum = 1;\r\n        getData(data);\r\n    }\r\n    const changePagenum = (event, value) => {\r\n        setPostData({ ...postData, pagenum: value });\r\n        let data = postData;\r\n        data.pagenum = value;\r\n        getData(data);\r\n    }\r\n    const changeKeyword = (event) => {\r\n        setPostData({ ...postData, keyeword: event.target.value, pagenum: 1 });\r\n        let data = postData;\r\n        data.keyword = event.target.value;\r\n        data.pagenum = 1;\r\n        getData(data);\r\n    }\r\n    const deleteRow = (id) => {\r\n        Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"You delete this!\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, delete it!\",\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                const data = postData\r\n                fetch(backend_url + 'delMyTeamId/?id=' + id, { method: 'GET' })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\r\n                        getSupervisorDetail({ data: postData, userid: userid }, dispatch);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n    const tableAction = (sortBy, sortDirection) => {\r\n        setPostData({ ...postData, filter: candidateColums[sortBy.id - 1].title, sorter: sortDirection, pagenum: 1 });\r\n        let data = postData;\r\n        data.filter = candidateColums[sortBy.id - 1].title;\r\n        data.sorter = sortDirection;\r\n        data.pagenum = 1;\r\n        getData(data);\r\n    };\r\n    const changeOption = (data) => {\r\n        const options = []\r\n        if (data !== null)\r\n            data.map(ele => {\r\n                let option = ele;\r\n                ele.value = ele.fname + \" \" + ele.lname;\r\n                ele.label = ele.fname + \" \" + ele.lname;\r\n                options.push(option);\r\n            })\r\n        return options;\r\n    };\r\n    const changeNameAdd = (value) => {\r\n        setSelectedUser(value);\r\n    };\r\n    const checkableAdd = () => {\r\n        let a = 0;\r\n        userDetail.userData && userDetail.userData.map(ele => {\r\n            if (ele.fname === selectedUser.fname && ele.lname === selectedUser.lname && ele.email === selectedUser.email && ele.cid - selectedUser.cid === 0) {\r\n                a = 1;\r\n            }\r\n        })\r\n        console.log(a)\r\n        return a === 1 ? true : false\r\n    };\r\n    const goToUser = (row) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(row)\r\n        };\r\n        fetch(backend_url + 'getIdUser', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data.data);\r\n                window.location.href = `${process.env.PUBLIC_URL}/elections/` + id + `/` + data.data;\r\n            });\r\n    }\r\n    const downloadFile = ({ data, fileName, fileType }) => {\r\n        const blob = new Blob([data], { type: fileType })\r\n\r\n        const a = document.createElement('a')\r\n        a.download = fileName\r\n        a.href = window.URL.createObjectURL(blob)\r\n        const clickEvt = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n        })\r\n        a.dispatchEvent(clickEvt)\r\n        a.remove()\r\n    }\r\n    const exportToCsv = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Headers for each column\r\n        let headers = ['No,First Name,Last Name,Rank,Role,Mobile, Civil Id, Username']\r\n\r\n        // Convert users data to a csv userDetail.userData\r\n        let csvData = changeData(userDetail.userData).reduce((acc, user) => {\r\n            const { no, fname, lname, rank, role, mobile, cid, username } = user;\r\n            let rankStr = \"\";\r\n            let roleStr = \"\";\r\n            rankList.data.map(ele => {\r\n                if (ele.id - rank === 0)\r\n                    rankStr = ele.name;\r\n            }, []);\r\n            roleList.data.map(ele => {\r\n                if (ele.id - role === 0)\r\n                    roleStr = ele.name;\r\n            }, []);\r\n            acc.push([no, fname, lname, rankStr, roleStr, mobile, cid, username].join(','))\r\n            return acc\r\n        }, [])\r\n\r\n        downloadFile({\r\n            data: [...headers, ...csvData].join('\\n'),\r\n            fileName: 'supervisor.csv',\r\n            fileType: 'text/csv',\r\n        })\r\n    }\r\n    return (\r\n        <Card className=\"card-primary customs-cards\">\r\n            <Card.Header className=\" pb-3\">\r\n                <div className=\"card-title pb-0  mb-2\">\r\n                    MY TEAM\r\n                    <div className=\"float-end\">\r\n                        <Button variant='' className=\"btn-sm btn-primary btn-rounded\" onClick={handleShow}>\r\n                            <i className=\"fe fe-user-plus me-1\"></i> Add New User\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button variant='' className=\"btn-sm btn-primary btn-rounded\" onClick={exportToCsv}>\r\n                            <i className=\"fe fe-download me-1\"></i> Download\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Modal show={show.flag} onHide={handleClose} >\r\n                    <Modal.Header className=\"modal-header\">\r\n                        <Modal.Title>Add New User</Modal.Title>\r\n                        <Button variant=\"\" className=\"btn btn-close\" onClick={handleClose}>\r\n                            x\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"modal-body\">\r\n                        <h6></h6>\r\n                        <div className=\" SlectBox\">\r\n                            <Select\r\n                                value={selectedUser}\r\n                                onChange={changeNameAdd}\r\n                                options={changeOption(allUser)}\r\n                                placeholder=\"Select Name\"\r\n                                classNamePrefix=\"selectform\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            {selectedUser ?\r\n                                <>\r\n                                    <div>email   :{selectedUser.email}</div>\r\n                                    <div>mobile  :{selectedUser.mobile}</div>\r\n                                    <div>civid id:{selectedUser.cid}</div>\r\n                                </> : <></>\r\n                            }\r\n\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            variant=\"\"\r\n                            className=\"btn ripple btn-primary\"\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                if (checkableAdd() === true || selectedUser.id - userid === 0) {\r\n                                    handleClose();\r\n                                    Swal.fire({\r\n                                        title: \"Add Warning\",\r\n                                        allowOutsideClick: false,\r\n                                        icon: \"warning\",\r\n                                        confirmButtonText: \"ok\",\r\n                                        cancelButtonColor: \"#38cab3\",\r\n                                        text: \"He (She) is already in your team\",\r\n                                    });\r\n                                } else {\r\n                                    const requestOptions = {\r\n                                        method: 'POST',\r\n                                        headers: { 'Content-Type': 'application/json' },\r\n                                        body: JSON.stringify({ teamid: userid, canid: selectedUser.id })\r\n                                    };\r\n                                    fetch(backend_url + 'addMyCandidateId', requestOptions)\r\n                                        .then(response => response.json())\r\n                                        .then(data => {\r\n                                            if (data.code - 200 === 0) {\r\n                                                getData(postData);\r\n                                                handleClose();\r\n                                                Swal.fire(\"Add!\", \"Add new member successfully\", \"success\");\r\n                                            }\r\n                                        });\r\n                                }\r\n                            }}\r\n                        >\r\n                            Add Member\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Card.Header>\r\n            <Card.Body className=\" d-md-flex bg-white\">\r\n                <div className=\"table-responsive \">\r\n                    <span className=\"datatable\">\r\n                        <span className=\"uselistdata\">\r\n                            <label className=\"float-first\">\r\n                                <select className=\"form-control select form-select\" defaultValue={\"5\"} onChange={changeLimit}>\r\n                                    <option value=\"5\" >5&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                    <option value=\"10\">10&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                    <option value=\"20\">20&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                    <option value=\"50\">50&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                </select>\r\n                            </label>\r\n                            <label className=\"float-end\">\r\n                                <input type=\"text\" placeholder=\"Name, Mobile, Civil id number Search...\" className=\"mb-4 form-control-sm form-control\" onChange={changeKeyword} style={{ width: \"400px\" }} />\r\n                            </label>\r\n                            <DataTable\r\n                                columns={candidateColums}\r\n                                data={changeData(userDetail.userData)}\r\n                                defaultSortField=\"id\"\r\n                                defaultSortAsc={false}\r\n                                pagination={false}\r\n                                striped\r\n                                onSort={tableAction}\r\n                            />\r\n                            <label className=\"float-end\" style={{ marginTop: \"5px\" }}>\r\n                                <Pagination page={postData.pagenum} count={Math.ceil(userDetail.userDataCount / postData.limit)} showFirstButton showLastButton onChange={changePagenum} />\r\n                            </label>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nSupervisorDetail.propTypes = {};\r\n\r\nSupervisorDetail.defaultProps = {};\r\n\r\nexport default SupervisorDetail;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { Card, Button, Modal } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { backend_url } from \"../../../Constant/Config\"\r\nimport DataTable from \"react-data-table-component\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Select from \"react-select\";\r\nimport { getGuanatorDetail } from \"../../../../redux/actions/userDetailAction\";\r\nconst GuanatorDetail = () => {\r\n    let { id } = useParams();\r\n    let { userid } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [show, setShow] = React.useState({ flag: false });\r\n    const handleClose = () => setShow({ flag: false });\r\n    const handleShow = () => setShow({ flag: true });\r\n    const rankList = useSelector(state => state.rank);\r\n    const roleList = useSelector(state => state.role);\r\n    const userDetail = useSelector(state => state.userDetail);\r\n    const [electionData, setElectionData] = React.useState({ id: id, title: \"\", description: \"\", location: \"\", date: \"\", type: \"\", image: \"\" });\r\n    const [userData, setUserData] = React.useState({ id: userid });\r\n    const [teamcount, setTeamCount] = React.useState();\r\n    const [guaranteesCount, setGuaranteesCount] = React.useState({ my: 0, all: 0 });\r\n    const [postData, setPostData] = React.useState({ limit: 5, keyword: \"\", filter: \"id\", sorter: \"desc\", pagenum: 1 });\r\n    const [allData, setAllData] = React.useState({ data: [], count: 0 });\r\n    const [allUser, setAllUser] = React.useState(null);\r\n    const [selectedUser, setSelectedUser] = React.useState();\r\n    const candidateColums = [\r\n        {\r\n            name: \"Name\",\r\n            cell: (row) => (\r\n                <span>\r\n                    <p className=\"tx-14 font-weight-semibold text-dark mb-1\"><a href=\"#\" onClick={() => goToUser(row)} className=\"pointer_action_button\">{row.fname + \" \" + row.lname}</a></p>\r\n                    <p className=\"tx-12 text-muted mb-0\">{row.email}</p>\r\n                </span>\r\n            ),\r\n        },\r\n        {\r\n            name: \"Rank\",\r\n            title: \"rank\",\r\n            selector: (row) => [row.rank],\r\n            cell: (row) => {\r\n                return rankList.data.map(ele => {\r\n                    if (ele.id - row.rank === 0)\r\n                        return ele.name;\r\n                })\r\n            },\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Role\",\r\n            title: \"role\",\r\n            cell: (row) => {\r\n                return roleList.data.map(ele => {\r\n                    if (ele.id - row.role === 0)\r\n                        return ele.name;\r\n                })\r\n            },\r\n            sortable: true\r\n        },\r\n        {\r\n            name: \"Mobile Number\",\r\n            title: \"mobile\",\r\n            sortable: true,\r\n            selector: (row) => [row.mobile]\r\n        },\r\n        {\r\n            name: \"Civil Id Number\",\r\n            title: \"cid\",\r\n            sortable: true,\r\n            selector: (row) => [row.cid]\r\n        },\r\n        {\r\n            name: \"Username\",\r\n            title: \"username\",\r\n            sortable: true,\r\n            selector: (row) => [row.username]\r\n        },\r\n        {\r\n            name: \"Guarantee\",\r\n            title: \"guarantee\",\r\n            sortable: true,\r\n            selector: (row) => [row.guarantee],\r\n        },\r\n        {\r\n            name: \"Attended\",\r\n            title: \"attended\",\r\n            sortable: true,\r\n            selector: (row) => [row.attended]\r\n        },\r\n        {\r\n            name: \"Status\",\r\n            title: \"status\",\r\n            sortable: true,\r\n            selector: (row) => [row.status]\r\n        },\r\n        {\r\n            name: \"\",\r\n            width: \"50px\",\r\n            cell: (row) => (\r\n                <span className=\"\" style={{ width: \"100%\", textAlign: \"end\" }}>\r\n                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Delete</Tooltip>} >\r\n                        <Link to=\"#\" className=\"btn btn-danger btn-sm rounded-11\" onClick={() => deleteRow(row.id)}>\r\n                            <i>\r\n                                <svg\r\n                                    className=\"table-delete\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    height=\"20\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    width=\"16\"\r\n                                >\r\n                                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n                                    <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z\" />\r\n                                </svg>\r\n                            </i>\r\n                        </Link>\r\n                    </OverlayTrigger>\r\n                </span >\r\n            ),\r\n        },\r\n    ]\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch(backend_url + 'getElectionId/?id=' + id, { method: 'GET' })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setElectionData(data.data);\r\n                });\r\n            await fetch(backend_url + 'getCandidateElection/?id=' + id, { method: 'GET' })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setAllUser(data.data);\r\n                });\r\n            await fetch(backend_url + 'getGuaranteesCount/?id=' + userid + '&eid=' + id, { method: 'GET' })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setGuaranteesCount(data.data);\r\n                });\r\n            await fetch(backend_url + 'getUserId/?id=' + userid, { method: 'GET' })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setUserData(data.data)\r\n                });\r\n            await fetch(backend_url + 'getUserTeamCount/?id=' + userid, { method: 'GET' })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setTeamCount(data.data);\r\n                });\r\n            getData(postData);\r\n        };\r\n        fetchData().catch(err => console.log(err));\r\n    }, [])\r\n    const getData = (data) => {\r\n        getGuanatorDetail({ data: postData, userid: userid, id: id }, dispatch);\r\n    }\r\n    const showCount = (type) => {\r\n        let total = 0;\r\n        switch (type) {\r\n            case \"total\":\r\n                teamcount && teamcount.map(ele => {\r\n                    total += ele.count;\r\n                })\r\n                break;\r\n            case \"supervisor\":\r\n                teamcount && teamcount.map(ele => {\r\n                    if (ele.name === \"supervisor\") total = ele.count\r\n                })\r\n                break;\r\n            case \"guarantor\":\r\n                teamcount && teamcount.map(ele => {\r\n                    if (ele.name === \"guarantor\") total = ele.count\r\n                })\r\n                break;\r\n            case \"checker\":\r\n                teamcount && teamcount.map(ele => {\r\n                    if (ele.name === \"checker\") total = ele.count\r\n                })\r\n                break;\r\n            case \"sorter\":\r\n                teamcount && teamcount.map(ele => {\r\n                    if (ele.name === \"sorter\") total = ele.count\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return total;\r\n    }\r\n    const changeData = (data) => {\r\n        let resultData = [];\r\n        if (data)\r\n            data.map((e, index) => {\r\n                let e_data = e;\r\n                e_data.no = index + postData.limit * (postData.pagenum - 1) + 1;\r\n                resultData.push(e_data);\r\n            })\r\n        return resultData;\r\n    }\r\n    const changeLimit = (event) => {\r\n        setPostData({ ...postData, limit: event.target.value, pagenum: 1 });\r\n        let data = postData;\r\n        data.limit = event.target.value;\r\n        data.pagenum = 1;\r\n        getData(data);\r\n    }\r\n    const changePagenum = (event, value) => {\r\n        setPostData({ ...postData, pagenum: value });\r\n        let data = postData;\r\n        data.pagenum = value;\r\n        getData(data);\r\n    }\r\n    const changeKeyword = (event) => {\r\n        setPostData({ ...postData, keyeword: event.target.value, pagenum: 1 });\r\n        let data = postData;\r\n        data.keyword = event.target.value;\r\n        data.pagenum = 1;\r\n        getData(data);\r\n    }\r\n    const deleteRow = (id) => {\r\n        Swal.fire({\r\n            title: \"Are you sure?\",\r\n            text: \"You delete this!\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, delete it!\",\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                const data = postData\r\n                fetch(backend_url + 'delMyGuanatorId/?id=' + id, { method: 'GET' })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        Swal.fire(\"Deleted!\", \"Your data has been deleted.\", \"success\");\r\n                        getGuanatorDetail({ data: postData, userid: userid, id: id }, dispatch);\r\n                    });\r\n            }\r\n        });\r\n    }\r\n    const tableAction = (sortBy, sortDirection) => {\r\n        setPostData({ ...postData, filter: candidateColums[sortBy.id - 1].title, sorter: sortDirection, pagenum: 1 });\r\n        let data = postData;\r\n        data.filter = candidateColums[sortBy.id - 1].title;\r\n        data.sorter = sortDirection;\r\n        data.pagenum = 1;\r\n        getData(data);\r\n    };\r\n    const changeOption = (data) => {\r\n        const options = []\r\n        if (data !== null)\r\n            data.map(ele => {\r\n                let option = ele;\r\n                ele.value = ele.fname + \" \" + ele.lname;\r\n                ele.label = ele.fname + \" \" + ele.lname;\r\n                options.push(option);\r\n            })\r\n        return options;\r\n    };\r\n    const changeNameAdd = (value) => {\r\n        setSelectedUser(value);\r\n    };\r\n    const checkableAdd = () => {\r\n        let a = 0;\r\n        userDetail.userData && userDetail.userData.map(ele => {\r\n            if (ele.fname === selectedUser.fname && ele.lname === selectedUser.lname && ele.email === selectedUser.email && ele.cid - selectedUser.cid === 0) {\r\n                a = 1;\r\n            }\r\n        })\r\n        console.log(a)\r\n        return a === 1 ? true : false\r\n    };\r\n    const goToUser = (row) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(row)\r\n        };\r\n        fetch(backend_url + 'getIdUser', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data.data);\r\n                window.location.href = `${process.env.PUBLIC_URL}/elections/` + id + `/` + data.data;\r\n            });\r\n    }\r\n    const downloadFile = ({ data, fileName, fileType }) => {\r\n        const blob = new Blob([data], { type: fileType })\r\n\r\n        const a = document.createElement('a')\r\n        a.download = fileName\r\n        a.href = window.URL.createObjectURL(blob)\r\n        const clickEvt = new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true,\r\n        })\r\n        a.dispatchEvent(clickEvt)\r\n        a.remove()\r\n    }\r\n    const exportToCsv = (e) => {\r\n        e.preventDefault()\r\n\r\n        // Headers for each column\r\n        let headers = ['No,First Name,Last Name,Rank,Role,Mobile, Civil Id, Username, Guarantee, Attended, Status ']\r\n\r\n        // Convert users data to a csv userDetail.userData\r\n        let csvData = changeData(userDetail.userData).reduce((acc, user) => {\r\n            const { no, fname, lname, rank, role, mobile, cid, username, guarantee, attended, status } = user;\r\n            let rankStr = \"\";\r\n            let roleStr = \"\";\r\n            rankList.data.map(ele => {\r\n                if (ele.id - rank === 0)\r\n                    rankStr = ele.name;\r\n            }, []);\r\n            roleList.data.map(ele => {\r\n                if (ele.id - role === 0)\r\n                    roleStr = ele.name;\r\n            }, []);\r\n            acc.push([no, fname, lname, rankStr, roleStr, mobile, cid, username, guarantee, attended, status].join(','))\r\n            return acc\r\n        }, [])\r\n\r\n        downloadFile({\r\n            data: [...headers, ...csvData].join('\\n'),\r\n            fileName: 'guanator.csv',\r\n            fileType: 'text/csv',\r\n        })\r\n    }\r\n    return (\r\n        <Card className=\"card-primary customs-cards\">\r\n            <Card.Header className=\" pb-3\">\r\n                <div className=\"card-title pb-0  mb-2\">\r\n                    MY TEAM\r\n                    <div className=\"float-end\">\r\n                        <Button variant='' className=\"btn-sm btn-primary btn-rounded\" onClick={handleShow}>\r\n                            <i className=\"fe fe-user-plus me-1\"></i> Add New User\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button variant='' className=\"btn-sm btn-primary btn-rounded\" onClick={exportToCsv}>\r\n                            <i className=\"fe fe-download me-1\"></i> Download\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Modal show={show.flag} onHide={handleClose} >\r\n                    <Modal.Header className=\"modal-header\">\r\n                        <Modal.Title>Add New User</Modal.Title>\r\n                        <Button variant=\"\" className=\"btn btn-close\" onClick={handleClose}>\r\n                            x\r\n                        </Button>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"modal-body\">\r\n                        <h6></h6>\r\n                        <div className=\" SlectBox\">\r\n                            <Select\r\n                                value={selectedUser}\r\n                                onChange={changeNameAdd}\r\n                                options={changeOption(allUser)}\r\n                                placeholder=\"Select Name\"\r\n                                classNamePrefix=\"selectform\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            {selectedUser ?\r\n                                <>\r\n                                    <div>email   :{selectedUser.email}</div>\r\n                                    <div>mobile  :{selectedUser.mobile}</div>\r\n                                    <div>civid id:{selectedUser.cid}</div>\r\n                                </> : <></>\r\n                            }\r\n\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button\r\n                            variant=\"\"\r\n                            className=\"btn ripple btn-primary\"\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                                if (checkableAdd() === true || selectedUser.id - userid === 0) {\r\n                                    handleClose();\r\n                                    Swal.fire({\r\n                                        title: \"Add Warning\",\r\n                                        allowOutsideClick: false,\r\n                                        icon: \"warning\",\r\n                                        confirmButtonText: \"ok\",\r\n                                        cancelButtonColor: \"#38cab3\",\r\n                                        text: \"He (She) is already in your team\",\r\n                                    });\r\n                                } else {\r\n                                    const requestOptions = {\r\n                                        method: 'POST',\r\n                                        headers: { 'Content-Type': 'application/json' },\r\n                                        body: JSON.stringify({ guarantorid: userid, electionid: id, userid: selectedUser.id, guarantee: 0, attended: 0, status: \"add\" })\r\n                                    };\r\n                                    fetch(backend_url + 'addMyGuanatorId', requestOptions)\r\n                                        .then(response => response.json())\r\n                                        .then(data => {\r\n                                            if (data.code - 200 === 0) {\r\n                                                getData(postData);\r\n                                                handleClose();\r\n                                                Swal.fire(\"Add!\", \"Add new member successfully\", \"success\");\r\n                                            }\r\n                                        });\r\n                                }\r\n                            }}\r\n                        >\r\n                            Add Member\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Card.Header>\r\n            <Card.Body className=\" d-md-flex bg-white\">\r\n                <div className=\"table-responsive \">\r\n                    <span className=\"datatable\">\r\n                        <span className=\"uselistdata\">\r\n                            <label className=\"float-first\">\r\n                                <select className=\"form-control select form-select\" defaultValue={\"5\"} onChange={changeLimit}>\r\n                                    <option value=\"5\" >5&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                    <option value=\"10\">10&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                    <option value=\"20\">20&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                    <option value=\"50\">50&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n                                </select>\r\n                            </label>\r\n                            <label className=\"float-end\">\r\n                                <input type=\"text\" placeholder=\"Name, Mobile, Civil id number Search...\" className=\"mb-4 form-control-sm form-control\" onChange={changeKeyword} style={{ width: \"400px\" }} />\r\n                            </label>\r\n                            <DataTable\r\n                                columns={candidateColums}\r\n                                data={changeData(userDetail.userData)}\r\n                                defaultSortField=\"id\"\r\n                                defaultSortAsc={false}\r\n                                pagination={false}\r\n                                striped\r\n                                onSort={tableAction}\r\n                            />\r\n                            <label className=\"float-end\" style={{ marginTop: \"5px\" }}>\r\n                                <Pagination page={postData.pagenum} count={Math.ceil(userDetail.userDataCount / postData.limit)} showFirstButton showLastButton onChange={changePagenum} />\r\n                            </label>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nGuanatorDetail.propTypes = {};\r\n\r\nGuanatorDetail.defaultProps = {};\r\n\r\nexport default GuanatorDetail;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nconst CandidateDetailTCard = (props) => {\r\n  console.log(\"props11\", props);\r\n  const count = useSelector((state) => state.userDetail.teamCount);\r\n  const rankList = useSelector((state) => state.rank);\r\n  const roleList = useSelector((state) => state.role);\r\n  const showCount = (type) => {\r\n    let total = 0;\r\n    switch (type) {\r\n      case \"total\":\r\n        count &&\r\n          count.map((ele) => {\r\n            total += ele.count;\r\n          });\r\n        break;\r\n      case \"candidate\":\r\n        count &&\r\n          count.map((ele) => {\r\n            if (ele.name === \"candidate\") total = ele.count;\r\n          });\r\n        break;\r\n      case \"supervisor\":\r\n        count &&\r\n          count.map((ele) => {\r\n            if (ele.name === \"supervisor\") total = ele.count;\r\n          });\r\n        break;\r\n      case \"guarantor\":\r\n        count &&\r\n          count.map((ele) => {\r\n            if (ele.name === \"guarantor\") total = ele.count;\r\n          });\r\n        break;\r\n      case \"checker\":\r\n        count &&\r\n          count.map((ele) => {\r\n            if (ele.name === \"checker\") total = ele.count;\r\n          });\r\n        break;\r\n      case \"sorter\":\r\n        count &&\r\n          count.map((ele) => {\r\n            if (ele.name === \"sorter\") total = ele.count;\r\n          });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return total;\r\n  };\r\n  return (\r\n    <Card className=\" user-wideget user-wideget-widget widget-user\">\r\n      <div className=\"widget-user-header br-te-5  br-ts-5  bg-primary\">\r\n        <h3 className=\"widget-user-username\">\r\n          <a href={`${process.env.PUBLIC_URL} /elections/` + props.election_id}>\r\n            {props.election_title}\r\n          </a>\r\n        </h3>\r\n      </div>\r\n      <div className=\"widget-user-image\">\r\n        <img\r\n          alt=\"avatar\"\r\n          className=\"rounded-circle\"\r\n          src={require(\"../../assets/img/user.png\")}\r\n        />\r\n      </div>\r\n      <div className=\"user-wideget-footer text-center\">\r\n        <h4 className=\"fs-16 mb-0 mt-3 text-dark fw-semibold\">\r\n          {props.data.fname + \" \" + props.data.lname}\r\n        </h4>\r\n      </div>\r\n      <div className=\"user-wideget-footer\">\r\n        <h3 className=\"card-title mb-2\">\r\n          Election Title: <span>{props.election_title}</span>\r\n        </h3>\r\n        <h3 className=\"card-title mb-2\">\r\n          Election Date: <span>{props.election_date}</span>\r\n        </h3>\r\n        <p>\r\n          <strong>Team:</strong>\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <strong>Candidates: </strong>\r\n            {showCount(\"candidate\")}\r\n          </li>\r\n          <li>\r\n            <strong>Supervisors: </strong>\r\n            {showCount(\"supervisor\")}\r\n          </li>\r\n          <li>\r\n            <strong>Guarantors: </strong>\r\n            {showCount(\"guarantor\")}\r\n          </li>\r\n          <li>\r\n            <strong>Checkers: </strong>\r\n            {showCount(\"checker\")}\r\n          </li>\r\n          <li>\r\n            <strong>Sorters: </strong>\r\n            {showCount(\"sorter\")}\r\n          </li>\r\n        </ul>\r\n        <p>\r\n          <strong>User Infomation:</strong>\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <strong>Name:</strong> {props.data.fname + \" \" + props.data.lname}{\" \"}\r\n          </li>\r\n          <li>\r\n            <strong>Role:</strong>{\" \"}\r\n            {roleList.data.map((ele) => {\r\n              if (ele.id - props.data.role === 0) {\r\n                return ele.name;\r\n              }\r\n            })}{\" \"}\r\n          </li>\r\n          <li>\r\n            <strong>Rank:</strong>{\" \"}\r\n            {rankList.data.map((ele) => {\r\n              if (ele.id - props.data.rank === 0) {\r\n                return ele.name;\r\n              }\r\n            })}{\" \"}\r\n          </li>\r\n          <li>\r\n            <strong>Mobile:</strong> {props.data.mobile}{\" \"}\r\n          </li>\r\n          <li>\r\n            <strong>Em@il:</strong> <a href=\"#\">{props.data.email} </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <a\r\n        href=\"https://thevirtualrealitytrip.com/wp-login.php?action=logout&amp;_wpnonce=95af37bd92\"\r\n        className=\"btn btn-danger  btn-rounded\">\r\n        Logout\r\n      </a>\r\n    </Card>\r\n  );\r\n};\r\n\r\nCandidateDetailTCard.propTypes = {};\r\n\r\nCandidateDetailTCard.defaultProps = {};\r\n\r\nexport default CandidateDetailTCard;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useSelector } from 'react-redux'\r\nconst SupervisorDetailTCard = (props) => {\r\n    const count = useSelector(state => state.userDetail.teamCount);\r\n    const rankList = useSelector(state => state.rank);\r\n    const roleList = useSelector(state => state.role);\r\n    const showCount = (type) => {\r\n        let total = 0;\r\n        switch (type) {\r\n            case \"total\":\r\n                count && count.map(ele => {\r\n                    total += ele.count;\r\n                })\r\n                break;\r\n            case \"candidate\":\r\n                count && count.map(ele => {\r\n                    if (ele.name === \"candidate\") total = ele.count\r\n                })\r\n                break;\r\n            case \"supervisor\":\r\n                count && count.map(ele => {\r\n                    if (ele.name === \"supervisor\") total = ele.count\r\n                })\r\n                break;\r\n            case \"guarantor\":\r\n                count && count.map(ele => {\r\n                    if (ele.name === \"guarantor\") total = ele.count\r\n                })\r\n                break;\r\n            case \"checker\":\r\n                count && count.map(ele => {\r\n                    if (ele.name === \"checker\") total = ele.count\r\n                })\r\n                break;\r\n            case \"sorter\":\r\n                count && count.map(ele => {\r\n                    if (ele.name === \"sorter\") total = ele.count\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return total;\r\n    }\r\n    return (\r\n        <Card className=\" user-wideget user-wideget-widget widget-user\">\r\n            <div className=\"widget-user-header br-te-5  br-ts-5  bg-primary\">\r\n                <h3 className=\"widget-user-username\">\r\n                    <a href={`${process.env.PUBLIC_URL} /elections/` + props.election_id}>\r\n                        {props.election_title}\r\n                    </a>\r\n                </h3>\r\n            </div>\r\n            <div className=\"widget-user-image\">\r\n                {/* <AvatarUserComponent imagePath={props.data.avatar} /> */}\r\n                <img alt=\"avatar\" className=\"rounded-circle\" src={require(\"../../assets/img/user.png\")} />\r\n            </div>\r\n            <div className=\"user-wideget-footer text-center\">\r\n                <h4 className=\"fs-16 mb-0 mt-3 text-dark fw-semibold\">\r\n                    {props.data.fname + \" \" + props.data.lname}\r\n                </h4>\r\n            </div>\r\n            <div className=\"user-wideget-footer\">\r\n                <h3 className=\"card-title mb-2\">Election Title: <span>{props.election_title}</span></h3>\r\n                <h3 className=\"card-title mb-2\">Election Date: <span>{props.election_date}</span></h3>\r\n                <p><strong>Team:</strong></p>\r\n                <ul>\r\n                    <li>\r\n                        <strong>Candidates: </strong>\r\n                        {showCount(\"candidate\")}\r\n                    </li>\r\n                    <li>\r\n                        <strong>Supervisors: </strong>\r\n                        {showCount(\"supervisor\")}\r\n                    </li>\r\n                    <li>\r\n                        <strong>Guarantors: </strong>\r\n                        {showCount(\"guarantor\")}\r\n                    </li>\r\n                    <li>\r\n                        <strong>Checkers: </strong>\r\n                        {showCount(\"checker\")}\r\n                    </li>\r\n                    <li>\r\n                        <strong>Sorters: </strong>\r\n                        {showCount(\"sorter\")}\r\n                    </li>\r\n                </ul>\r\n                <p><strong>User Infomation:</strong></p>\r\n                <ul>\r\n                    <li><strong>Name:</strong> {props.data.fname + \" \" + props.data.lname} </li>\r\n                    <li><strong>Role:</strong> {roleList.data.map(ele => { if (ele.id - props.data.role === 0) { return ele.name } })} </li>\r\n                    <li><strong>Rank:</strong> {rankList.data.map(ele => { if (ele.id - props.data.rank === 0) { return ele.name } })} </li>\r\n                    <li><strong>Mobile:</strong> {props.data.mobile} </li>\r\n                    <li><strong>Em@il:</strong> <a href=\"#\">{props.data.email} </a></li></ul>\r\n            </div>\r\n            <a href=\"https://thevirtualrealitytrip.com/wp-login.php?action=logout&amp;_wpnonce=95af37bd92\" className=\"btn btn-danger  btn-rounded\">Logout</a>\r\n        </Card>\r\n    )\r\n};\r\n\r\nSupervisorDetailTCard.propTypes = {};\r\n\r\nSupervisorDetailTCard.defaultProps = {};\r\n\r\nexport default SupervisorDetailTCard;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useSelector } from 'react-redux'\r\nconst GuanatorDetailTCard = (props) => {\r\n    const rankList = useSelector(state => state.rank);\r\n    const roleList = useSelector(state => state.role);\r\n    return (\r\n        <Card className=\" user-wideget user-wideget-widget widget-user\">\r\n            <div className=\"widget-user-header br-te-5  br-ts-5  bg-primary\">\r\n                <h3 className=\"widget-user-username\">\r\n                    <a href={`${process.env.PUBLIC_URL} /elections/` + props.election_id}>\r\n                        {props.election_title}\r\n                    </a>\r\n                </h3>\r\n            </div>\r\n            <div className=\"widget-user-image\">\r\n                {/* <AvatarUserComponent imagePath={props.data.avatar} /> */}\r\n                <img alt=\"avatar\" className=\"rounded-circle\" src={require(\"../../assets/img/user.png\")} />\r\n            </div>\r\n            <div className=\"user-wideget-footer text-center\">\r\n                <h4 className=\"fs-16 mb-0 mt-3 text-dark fw-semibold\">\r\n                    {props.data.fname + \" \" + props.data.lname}\r\n                </h4>\r\n            </div>\r\n            <div className=\"user-wideget-footer\">\r\n                <h3 className=\"card-title mb-2\">Election Title: <span>{props.election_title}</span></h3>\r\n                <h3 className=\"card-title mb-2\">Election Date: <span>{props.election_date}</span></h3>\r\n                <p><strong>User Infomation:</strong></p>\r\n                <ul>\r\n                    <li><strong>Name:</strong> {props.data.fname + \" \" + props.data.lname} </li>\r\n                    <li><strong>Role:</strong> {roleList.data.map(ele => { if (ele.id - props.data.role === 0) { return ele.name } })} </li>\r\n                    <li><strong>Rank:</strong> {rankList.data.map(ele => { if (ele.id - props.data.rank === 0) { return ele.name } })} </li>\r\n                    <li><strong>Mobile:</strong> {props.data.mobile} </li>\r\n                    <li><strong>Em@il:</strong> <a href=\"#\">{props.data.email} </a></li></ul>\r\n            </div>\r\n            <a href=\"https://thevirtualrealitytrip.com/wp-login.php?action=logout&amp;_wpnonce=95af37bd92\" className=\"btn btn-danger  btn-rounded\">Logout</a>\r\n        </Card>\r\n    )\r\n};\r\n\r\nGuanatorDetailTCard.propTypes = {};\r\n\r\nGuanatorDetailTCard.defaultProps = {};\r\n\r\nexport default GuanatorDetailTCard;\r\n","/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { Card, Col, Breadcrumb, Row, ProgressBar } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { backend_url } from \"../../../Constant/Config\";\r\nimport CandidateDetail from \"./CandidateDetail\";\r\nimport SupervisorDetail from \"./SupervisorDetail\";\r\nimport GuanatorDetail from \"./GuanatorDetail\";\r\nimport CandidateDetailTCard from \"../../../Cards/CandidateDetailTCard\";\r\nimport SupervisorDetailTCard from \"../../../Cards/SupervisorDetailTCard\";\r\nimport GuanatorDetailTCard from \"../../../Cards/GuanatorDetailTCard\";\r\nconst UserDetailIndex = () => {\r\n  let { id } = useParams();\r\n  let { userid } = useParams();\r\n  const count = useSelector((state) => state.userDetail.teamCount);\r\n  const [electionData, setElectionData] = React.useState({\r\n    id: id,\r\n    title: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n    date: \"\",\r\n    type: \"\",\r\n    image: \"\",\r\n  });\r\n  const [userData, setUserData] = React.useState({ id: userid });\r\n  const [guaranteesCount, setGuaranteesCount] = React.useState({\r\n    my: 0,\r\n    all: 0,\r\n  });\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(backend_url + \"getElectionId/?id=\" + id, { method: \"GET\" })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"dataid\", data);\r\n          setElectionData(data.data);\r\n        });\r\n      await fetch(\r\n        backend_url + \"getGuaranteesCount/?id=\" + userid + \"&eid=\" + id,\r\n        { method: \"GET\" }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setGuaranteesCount(data.data);\r\n        });\r\n      await fetch(backend_url + \"getUserId/?id=\" + userid, { method: \"GET\" })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setUserData(data.data);\r\n        });\r\n    };\r\n    fetchData().catch((err) => console.log(err));\r\n  }, []);\r\n  const showCount = (type) => {\r\n    let total = 0;\r\n    switch (type) {\r\n      case \"total\":\r\n        count &&\r\n          count.map((ele) => {\r\n            total += ele.count;\r\n          });\r\n        break;\r\n      case \"candidate\":\r\n        count &&\r\n          count.map((ele) => {\r\n            if (ele.name === \"candidate\") total = ele.count;\r\n          });\r\n        break;\r\n      case \"supervisor\":\r\n        count &&\r\n          count.map((ele) => {\r\n            if (ele.name === \"supervisor\") total = ele.count;\r\n          });\r\n        break;\r\n      case \"guarantor\":\r\n        count &&\r\n          count.map((ele) => {\r\n            if (ele.name === \"guarantor\") total = ele.count;\r\n          });\r\n        break;\r\n      case \"checker\":\r\n        count &&\r\n          count.map((ele) => {\r\n            if (ele.name === \"checker\") total = ele.count;\r\n          });\r\n        break;\r\n      case \"sorter\":\r\n        count &&\r\n          count.map((ele) => {\r\n            if (ele.name === \"sorter\") total = ele.count;\r\n          });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return total;\r\n  };\r\n  return (\r\n    <div>\r\n      {/* <!-- breadcrumb --> */}\r\n      <div className=\"breadcrumb-header justify-content-between\">\r\n        <div className=\"left-content\">\r\n          <span className=\"main-content-title mg-b-0 mg-b-lg-1\">\r\n            {userData.fname + \" \" + userData.lname}\r\n          </span>\r\n        </div>\r\n        <div className=\"justify-content-center mt-2\">\r\n          <Breadcrumb className=\"breadcrumb\">\r\n            <Breadcrumb.Item className=\"breadcrumb-item tx-15\" href=\"#\">\r\n              Dashboard\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item\r\n              className=\"breadcrumb-item \"\r\n              active\r\n              aria-current=\"page\">\r\n              Elections\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item\r\n              className=\"breadcrumb-item \"\r\n              active\r\n              aria-current=\"page\">\r\n              {electionData.title}\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item\r\n              className=\"breadcrumb-item \"\r\n              active\r\n              aria-current=\"page\">\r\n              {userData.fname + \" \" + userData.lname}\r\n            </Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </div>\r\n      </div>\r\n      {/* <!-- /breadcrumb --> */}\r\n\r\n      <Row>\r\n        <Col lg={12} md={12} xl={9} sm={12}>\r\n          {userData.rank - 2 !== 0 ? (\r\n            <></>\r\n          ) : (\r\n            <Row className=\"row-cards row-deck\">\r\n              <Col sm={12} lg={6}>\r\n                <Card>\r\n                  <Card.Header className=\" pb-0\">\r\n                    <div className=\"card-title pb-0  mb-2\">TEAM</div>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Row>\r\n                      <div className=\"col text-center\">\r\n                        <label className=\"tx-12\">Team Members</label>\r\n                        <p className=\"font-weight-bold tx-20\">\r\n                          {showCount(\"total\")}\r\n                        </p>\r\n                      </div>{\" \"}\r\n                      {/*<!-- col --> */}\r\n                      <div className=\"col border-start text-center\">\r\n                        <label className=\"tx-12\">Supervisors</label>\r\n                        <p className=\"font-weight-bold tx-20\">\r\n                          {showCount(\"supervisor\")}\r\n                        </p>\r\n                      </div>\r\n                      {/* <!-- col --> */}\r\n                      <div className=\"col border-start text-center\">\r\n                        <label className=\"tx-12\">Guarantors</label>\r\n                        <p className=\"font-weight-bold tx-20\">\r\n                          {showCount(\"guarantor\")}\r\n                        </p>\r\n                      </div>\r\n                      {/* <!-- col --> */}\r\n                    </Row>\r\n                    {/*<!-- row --> */}\r\n                    <div className=\"mt-4\">\r\n                      <p className=\"mb-1\">Days to the election</p>\r\n                      <div className=\"progress ht-20\">\r\n                        <ProgressBar\r\n                          animated\r\n                          now={50}\r\n                          variant=\"primary\"\r\n                          label=\"50%\"\r\n                          className=\"progress-bar progress-bar-striped progress-bar-animated bg-primary ht-20 w-50\">\r\n                          50%\r\n                        </ProgressBar>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col sm={12} lg={6}>\r\n                <Card>\r\n                  <Card.Header className=\" pb-0\">\r\n                    <div className=\"card-title pb-0 mb-2\">GUARANTEES LIST</div>\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <Row>\r\n                      <div className=\"col text-center\">\r\n                        <label className=\"tx-12\">My Guarantees</label>\r\n                        <p className=\"font-weight-bold tx-20\">\r\n                          {guaranteesCount.my}\r\n                        </p>\r\n                      </div>\r\n                      {/* <!-- col --> */}\r\n                      <div className=\"col border-start text-center \">\r\n                        <label className=\"tx-12\">All Guarantees</label>\r\n                        <p className=\"font-weight-bold tx-20\">\r\n                          {guaranteesCount.all}\r\n                        </p>\r\n                      </div>{\" \"}\r\n                      {/* <!-- col --> */}\r\n                      <div className=\"col border-start text-center\">\r\n                        <label className=\"tx-12\">Target</label>\r\n                        <p className=\"font-weight-bold tx-20\">36</p>\r\n                      </div>\r\n                      {/* <!-- col --> */}\r\n                    </Row>\r\n                    {/* <!-- row --> */}\r\n                    <div className=\"mt-4\">\r\n                      <p className=\"mb-1\">Target Guarantees</p>\r\n                      <div className=\"progress ht-20\">\r\n                        <ProgressBar\r\n                          animated\r\n                          now={60}\r\n                          variant=\"primary\"\r\n                          label=\"60%\"\r\n                          className=\"progress-bar progress-bar-striped progress-bar-animated bg-warning wd-70p ht-20\">\r\n                          36%\r\n                        </ProgressBar>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          {userData.rank - 2 === 0 ? (\r\n            <CandidateDetail />\r\n          ) : (\r\n            <>\r\n              {userData.rank - 3 === 0 ? (\r\n                <SupervisorDetail />\r\n              ) : (\r\n                <>{userData.rank - 4 === 0 ? <GuanatorDetail /> : <></>}</>\r\n              )}\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col xl={3} lg={12} md={12} sm={12}>\r\n          <Col xl={12} lg={12}>\r\n            {userData.rank - 2 === 0 ? (\r\n              <CandidateDetailTCard\r\n                data={userData}\r\n                election_title={electionData.title}\r\n                election_date={electionData.date}\r\n                election_id={electionData.id}\r\n              />\r\n            ) : (\r\n              <>\r\n                {userData.rank - 3 === 0 ? (\r\n                  <SupervisorDetailTCard\r\n                    data={userData}\r\n                    election_title={electionData.title}\r\n                    election_date={electionData.date}\r\n                    election_id={electionData.id}\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    {userData.rank - 4 === 0 ? (\r\n                      <GuanatorDetailTCard\r\n                        data={userData}\r\n                        election_title={electionData.title}\r\n                        election_date={electionData.date}\r\n                        election_id={electionData.id}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* <!-- Row --> */}\r\n      <Row className=\" row-sm\">\r\n        <Col lg={12} md={12}>\r\n          <div className=\"tab-content\"></div>\r\n          {/* </div> */}\r\n        </Col>\r\n      </Row>\r\n      {/* <!-- row closed --> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nUserDetailIndex.propTypes = {};\r\n\r\nUserDetailIndex.defaultProps = {};\r\n\r\nexport default UserDetailIndex;\r\n"],"names":["backend_url","process","election_status","concat","key","value","color","getCandidateDetail","_ref","dispatch","data","userid","fetch","method","then","response","json","type","payload","limit","keyword","filter","sorter","pagenum","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","_x","apply","arguments","getSupervisorDetail","_ref3","_ref4","_callee2","_context2","_x2","getGuanatorDetail","_ref5","id","_ref6","_callee3","_context3","_x3","CandidateDetail","useParams","useDispatch","_React$useState","React","flag","_React$useState2","_slicedToArray","show","setShow","handleClose","rankList","useSelector","state","rank","roleList","role","userDetail","_React$useState3","_React$useState4","postData","setPostData","_React$useState5","_React$useState6","allUser","setAllUser","_React$useState7","_React$useState8","selectedUser","setSelectedUser","candidateColums","name","cell","row","_jsxs","children","_jsx","className","href","onClick","goToUser","fname","lname","email","title","selector","map","ele","sortable","mobile","cid","username","width","style","textAlign","OverlayTrigger","placement","overlay","Tooltip","Link","to","deleteRow","xmlns","height","viewBox","d","fill","fetchData","getData","catch","err","console","log","changeData","resultData","e","index","e_data","no","push","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","requestOptions","headers","body","JSON","stringify","window","location","Card","Button","variant","preventDefault","csvData","userData","reduce","acc","user","rankStr","roleStr","join","fileName","fileType","blob","Blob","a","document","createElement","download","URL","createObjectURL","clickEvt","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","downloadFile","_toConsumableArray","Modal","onHide","Select","onChange","options","option","label","changeOption","placeholder","classNamePrefix","_Fragment","checkableAdd","allowOutsideClick","canid","teamid","code","defaultValue","event","_objectSpread","target","keyeword","DataTable","columns","defaultSortField","defaultSortAsc","pagination","striped","onSort","sortBy","sortDirection","marginTop","Pagination","page","count","Math","ceil","userDataCount","showFirstButton","showLastButton","defaultProps","SupervisorDetail","description","date","image","setElectionData","setUserData","setTeamCount","_React$useState9","my","all","_React$useState10","setGuaranteesCount","_React$useState11","_React$useState12","_React$useState13","_React$useState14","_React$useState15","_React$useState16","_React$useState17","_React$useState18","GuanatorDetail","guarantee","attended","status","guarantorid","electionid","CandidateDetailTCard","props","teamCount","showCount","total","election_id","election_title","alt","src","require","election_date","SupervisorDetailTCard","GuanatorDetailTCard","UserDetailIndex","electionData","guaranteesCount","Breadcrumb","active","Row","Col","lg","md","xl","sm","ProgressBar","animated","now"],"sourceRoot":""}